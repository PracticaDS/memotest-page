{"version":3,"sources":["components/Ficha.js","components/Tablero.js","App.js","serviceWorker.js","index.js"],"names":["Ficha","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","bocaArriba","alDarseVuelta","contenido","id","classes","resuelta","push","classNames","join","react_default","a","createElement","className","onClick","darVuelta","bind","React","Component","defaultProps","Tablero","_this","call","state","contenidosMezclados","_","shuffle","contenidos","concat","fichasActuales","fichasBocaArriba","paresEncontrados","unaFicha","includes","ficha","parDeFichas","setState","objectSpread","filter","it","_this2","contenidoDe","nuevosParesEncontrados","toConsumableArray","length","isFunction","onCompletado","setTimeout","ponerBocaAbajo","potencialPar","procesarPar","agregarAParDeFichas","gridTemplateColumns","columnas","index","flatten","_this3","fichas","map","unContenido","Ficha_Ficha","seleccionarFicha","isResuelta","isBocaArriba","style","calculateStyle","App","Tablero_Tablero","window","alert","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.811aea98.chunk.js","sourcesContent":["import React from 'react';\n\nimport \"./Ficha.css\"\nimport PropTypes from 'prop-types';\n\nexport class Ficha extends React.Component {\n\n  darVuelta() {\n    if(!this.props.bocaArriba && this.props.alDarseVuelta) {\n      this.props.alDarseVuelta(this.props.contenido, this.props.id)\n    }\n  }\n\n  render() {\n    const classes = [\"ficha\"]\n    \n    if(this.props.resuelta) classes.push(\"resuelta\")\n    if(!this.props.bocaArriba) classes.push(\"boca-abajo\")\n\n    const classNames = classes.join(\" \")\n\n    return <div className={classNames} onClick={this.darVuelta.bind(this)}>{this.props.bocaArriba?this.props.contenido:\"\"}</div>;\n  }\n}\n\nFicha.propTypes = {\n  bocaArriba: PropTypes.bool,\n  alDarseVuelta: PropTypes.func,\n  resuelta: PropTypes.bool,\n  id: PropTypes.number,\n  contenido: PropTypes.string\n}\n\nFicha.defaultProps = {\n  bocaArriba: false,\n  resuelta: false\n}","import React from 'react';\nimport { Ficha } from './Ficha';\nimport _ from 'lodash';\nimport './Tablero.css'\nimport { PropTypes } from 'prop-types';\n\nexport class Tablero extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      contenidosMezclados: _.shuffle(props.contenidos.concat(props.contenidos)),\n      fichasActuales: [],\n      fichasBocaArriba: [],\n      paresEncontrados: []\n    };\n  }\n\n  isBocaArriba(unaFicha) {\n    return _.includes(this.state.fichasBocaArriba, unaFicha);;\n  }\n\n  contenidoDe(ficha) {\n    return this.state.contenidosMezclados[ficha];\n  }\n\n  ponerBocaAbajo(parDeFichas) {\n    this.setState({\n      ...this.state,\n      fichasBocaArriba: this.state.fichasBocaArriba.filter(it => !_.includes(parDeFichas, it))\n    })\n  }\n\n  procesarPar(parDeFichas) {\n    if(this.contenidoDe(parDeFichas[0]) === this.contenidoDe(parDeFichas[1])) {\n      const nuevosParesEncontrados = [...this.state.paresEncontrados, parDeFichas];\n      \n      if(nuevosParesEncontrados.length === this.props.contenidos.length && _.isFunction(this.props.onCompletado)) {\n        this.props.onCompletado.call(nuevosParesEncontrados);\n      }\n\n      return nuevosParesEncontrados;\n    } else {\n      setTimeout(() => this.ponerBocaAbajo(parDeFichas), 2000)\n      return this.state.paresEncontrados;\n    }\n  }\n\n  agregarAParDeFichas(ficha) {\n    const potencialPar = this.state.fichasActuales.concat(ficha);\n    if(potencialPar.length === 2) {\n      return {\n        paresEncontrados: this.procesarPar(potencialPar),\n        fichasActuales: []\n      }\n    } else {\n      return {fichasActuales: potencialPar}\n    }\n  }\n\n  seleccionarFicha(contenido, ficha) {    \n    this.setState({\n      ...this.state,\n      fichasBocaArriba: this.state.fichasBocaArriba.concat(ficha),\n      ...this.agregarAParDeFichas(ficha)\n    });  \n  }\n\n  calculateStyle() {\n    return {gridTemplateColumns: `repeat(${this.props.columnas}, fit-content(120px))`};\n  }\n\n  isResuelta(index) {\n    return _.flatten(this.state.paresEncontrados).includes(index)\n  }\n\n  render() {\n    const fichas = this.state.contenidosMezclados.map(\n      (unContenido, index) => <Ficha\n        alDarseVuelta={this.seleccionarFicha.bind(this)}\n        id={index}\n        key={index}\n        resuelta={this.isResuelta(index)}\n        bocaArriba={this.isBocaArriba(index)}\n        contenido={unContenido} />\n    );\n    \n    return <div style={this.calculateStyle()} className=\"tablero\">{fichas}</div>\n  }\n}\n\nTablero.propTypes = {\n  contenidos: PropTypes.array,\n  columnas: PropTypes.number\n}\n\nTablero.defaultProps = {\n  columnas: 3\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Tablero } from './components/Tablero';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Small Memotest</h1>\n          <Tablero columnas={4} contenidos={[\"ðŸ¤¡\",\"ðŸ‘¹\",\"ðŸ‘»\",\"ðŸ‘½\",\"ðŸ‘¾\",\"ðŸ¤–\",\"ðŸ˜º\",\"ðŸ™Š\"]} onCompletado={() => window.alert(\"Ganaste!!\")} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}